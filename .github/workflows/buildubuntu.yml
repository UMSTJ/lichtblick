name: Build Ubuntu Desktop Apps

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    name: (${{ matrix.os }})

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
        with:
          lfs: true

      - name: Set up Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 16.17 # 使用 LTS 版本

      - name: Enable Corepack and Yarn
        run: corepack enable yarn

      - name: Restore cache
        uses: actions/cache@v4.0.0
        with:
          path: |
            .yarn/cache
            **/node_modules
          key: v5-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: v5-${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build for All OS
        run: yarn run desktop:build:prod

      - name: Package for Windows
        if: matrix.os == 'windows-latest'
        run: yarn run package:win

      - name: Package for macOS
        if: matrix.os == 'macos-latest'
        run: yarn run package:darwin

      - name: Package for Linux
        if: matrix.os == 'ubuntu-latest'
        run: yarn run package:linux

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest' && success()
        uses: actions/upload-artifact@v3
        with:
          name: windows-app
          path: dist/**/*win-x64.exe

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest' && success()
        uses: actions/upload-artifact@v3
        with:
          name: macos-app
          path: dist/**/*.dmg

      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest' && success()
        uses: actions/upload-artifact@v3
        with:
          name: linux-app
          path: dist/**/*.deb
