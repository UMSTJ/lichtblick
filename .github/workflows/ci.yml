name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-20.04

    # Run each command in parallel with the same setup steps.
    strategy:
      fail-fast: false
      matrix:
        config:
          # Specify names so that the GitHub branch protection settings for
          # required checks don't need to change if we ever change the commands used.
          - name: lint
            command: lint:nofix
          - name: test
            command: test --maxWorkers=100%
          - name: storybook
            command: storybook:ci

    name: ${{ matrix.config.name }}

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Configure Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.x
      - name: Restore cache
        uses: actions/cache@v2.1.4
        with:
          path: |
            .yarn/cache
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Configure Google Cloud
        if: matrix.config.name == 'storybook'
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true
      - run: yarn install --immutable
      - run: yarn run ${{ matrix.config.command }}
        env:
          REG_SUIT_GITHUB_CLIENT_ID: ${{ secrets.REG_SUIT_GITHUB_CLIENT_ID }}
          REG_SUIT_HEAD_SHA: ${{ github.sha }}
          REG_SUIT_BASE_SHA: ${{ github.event.pull_request.base.sha }}

  integration:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]

    name: integration-${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Configure Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.x
      - name: Restore cache
        uses: actions/cache@v2.1.4
        with:
          path: |
            .yarn/cache
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --immutable
      - name: test:integration
        if: matrix.os == 'ubuntu-20.04'
        uses: GabrielBB/xvfb-action@v1.4
        with:
          working-directory: ./
          run: yarn run test:integration
      - name: test:integration
        if: matrix.os != 'ubuntu-20.04'
        run: yarn run test:integration
