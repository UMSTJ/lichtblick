name: Release

on:
  workflow_dispatch:

permissions:
  contents: write

# 设置环境变量，方便统一管理版本号
env:
  NEW_VERSION: ""

jobs:
  # 第一步：提升版本号并提交更改
  version:
    name: Bump version
    runs-on: macos-latest
    outputs:
      new_version: ${{ steps.version_bump.outputs.new_version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 16.17

      - name: Enable corepack
        run: corepack enable yarn

      - name: Install dependencies
        run: yarn install --immutable

      - name: Bump version and set output
        id: version_bump
        run: |
          yarn version minor
          yarn workspace @lichtblick/suite version minor

          NEW_VERSION_VALUE=$(node -p "require('./package.json').version")
          echo "new_version=${NEW_VERSION_VALUE}" >> $GITHUB_ENV
          echo "new_version=${NEW_VERSION_VALUE}" >> $GITHUB_OUTPUT

      - name: Commit and push version bump
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json packages/suite/package.json yarn.lock
          git commit -m "chore: Bump version to v${{ env.new_version }} [skip ci]"
          git tag "v${{ env.new_version }}"
          git push origin main --tags

  # 第二步：并行构建所有平台
  build:
    name: Build on ${{ matrix.os }}
    needs: version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1
        with:
          ref: "v${{ needs.version.outputs.new_version }}"

      - name: Set up Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 16.17

      # ===============================================================
      # ++ 新增: Android 环境设置 (仅在 Linux runner 上运行) ++
      # ===============================================================
      - name: Set up Java (for Android)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Set up Android SDK & NDK
        if: matrix.os == 'ubuntu-latest'
        run: |
          ANDROID_HOME=$HOME/android-sdk
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV

          # 下载并解压
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip commandlinetools-linux-11076708_latest.zip
          rm commandlinetools-linux-11076708_latest.zip

          mkdir -p $ANDROID_HOME/cmdline-tools/latest
          mv cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest/
          rmdir cmdline-tools

          # 现在路径是正确的，可以安全地添加到 GITHUB_PATH
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH


          # 接受许可证并安装必要的包
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;26.1.10909125"

          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

          # 设置 NDK 环境变量
          echo "ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/26.1.10909125" >> $GITHUB_ENV

      - name: Enable corepack
        run: corepack enable yarn

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build production files
        run: yarn run desktop:build:prod

      # --- macOS Build ---
      - name: Build macOS version
        if: matrix.os == 'macos-latest'
        run: yarn run package:darwin

      # --- Linux Build ---
      - name: Build linux version
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget file libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
          yarn run package:linux

      # --- Windows Build ---
      - name: Build windows version
        if: matrix.os == 'windows-latest'
        run: yarn run package:win

      # --- Android Build (在已配置好环境的 Linux 上构建) ---
      - name: Build Android version
        if: matrix.os == 'ubuntu-latest'
        run: yarn run package:android

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.os }}
          path: |
            dist/
            src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release.apk

  # 第三步：创建 Release
  release:
    name: Create GitHub Release
    needs: [version, build]
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          merge-multiple: true

      - name: List files for debugging
        run: ls -R dist

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ needs.version.outputs.new_version }}"
          name: "v${{ needs.version.outputs.new_version }}"
          commit: main
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: |
            dist/lichtblick-${{ needs.version.outputs.new_version }}-linux-amd64.deb
            dist/lichtblick-${{ needs.version.outputs.new_version }}-linux-x64.tar.gz
            dist/lichtblick-${{ needs.version.outputs.new_version }}-linux-arm64.deb
            dist/lichtblick-${{ needs.version.outputs.new_version }}-linux-arm64.tar.gz
            dist/lichtblick-${{ needs.version.outputs.new_version }}-mac-universal.dmg
            dist/lichtblick-${{ needs.version.outputs.new_version }}-win.exe
            dist/latest-linux.yml
            dist/latest-mac.yml
            dist/latest.yml
            dist/app-universal-release.apk
