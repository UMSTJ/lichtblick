env:
  browser: true
  es6: true
  node: true

ignorePatterns:
  - dist
  - out
  - template
  - "packages/**/wasm/*.js"
  - "!.storybook"
  - storybook-static
  # This file triggers an eslint bug because of our {fs: false} setting in webpack config.
  # But for some reason it only happens locally, not in CI.
  - packages/studio-base/src/test/transformers/rawImportPreprocessor.ts

plugins:
  - file-progress
  - jest

extends:
  - plugin:@foxglove/base
  - plugin:@foxglove/react

settings:
  import/internal-regex: "^@foxglove"

rules:
  "@foxglove/license-header": error
  "@foxglove/strict-equality": off # will replace some no-restricted-syntax in the future

  # show progress while linting
  file-progress/activate: warn

  # enabled in .eslintrc.ci.yaml
  prettier/prettier: off
  import/no-self-import: off
  import/no-duplicates: off

  id-denylist:
    - error
    - useEffectOnce
    - window # don't allow redefining window
  no-console: off # configured in no-restricted-syntax

  react/jsx-uses-react: off
  react/prop-types: off # Unnecessary with typescript validation
  react-hooks/exhaustive-deps:
    - error
    - additionalHooks: "(useAsync(?!AppConfigurationValue))"

  no-warning-comments:
    - error
    - terms: ["fixme", "xxx"]
      location: anywhere

  prefer-arrow-callback:
    - error
    - allowNamedFunctions: true
  no-restricted-imports:
    - error
    - paths:
        - name: lodash
          importNames: [get]
          message: "Use optional chaining instead of lodash.get."
        - name: lodash/get
          message: "Use optional chaining instead of lodash.get."

  no-restricted-syntax:
    - error
    - selector: "MethodDefinition[kind='get'], Property[kind='get']"
      message: "Property getters are not allowed; prefer function syntax instead."
    - selector: "MethodDefinition[kind='set'], Property[kind='set']"
      message: "Property setters are not allowed; prefer function syntax instead."
    # We disable console methods here rather than using no-console so that it doesn't prohibit overrides such as "console.info = ..."
    - selector: "CallExpression[callee.object.name='console'][callee.property.name!=/^(warn|error|debug|assert)$/]"
      message: "Unexpected property on console object was called"

    # Ban `null [!=]= x` and `x [!=]= null`
    - selector: "BinaryExpression:matches([operator='=='], [operator='!=']):matches([left.type=Literal][left.raw=null], [right.type=Literal][right.raw=null])"
      message: 'Prefer "x == undefined" or "x != undefined" to check for both null and undefined.'
    # Ban `undefined [!=]= x`
    - selector: "BinaryExpression:matches([operator='=='], [operator='!='])[left.type=Identifier][left.name=undefined]"
      message: 'Prefer "x == undefined" or "x != undefined" to check for both null and undefined.'
    # Ban `==` and `!=` unless RHS is undefined
    - selector: "BinaryExpression:matches([operator='=='], [operator='!=']):not([right.type=Identifier][right.name=undefined]):not([right.type=Literal][right.raw=null])"
      message: 'Use strict equality operators "===" and "!==", except when checking for null or undefined.'

    - selector: "TSNullKeyword, Literal[raw=null]"
      message: >
        Prefer undefined instead of null. When required for React refs/components, use
        the `ReactNull` alias. Otherwise, if strictly necessary, disable this error with
        `// eslint-disable-next-line no-restricted-syntax`. For rationale, see:
        https://github.com/sindresorhus/meta/discussions/7"

  jest/no-disabled-tests: error

overrides:
  - files: ["*.ts", "*.tsx"]
    extends:
      - plugin:@foxglove/typescript
    parserOptions:
      project: ./tsconfig.eslint.json
    rules:
      "@typescript-eslint/ban-ts-comment":
        - error
        # TODO: remove once we fix all TS issues
        - ts-expect-error: allow-with-description
          ts-ignore: true
          ts-nocheck: false
          ts-check: true
      "@typescript-eslint/strict-boolean-expressions":
        - error
          # Force explicit checks that strings are empty
        - allowString: false
          # Force explicit checks that numbers are != 0 or NaN
          allowNumber: false
          # Keeps the error count manageable while we enhance type information from the flow conversion
          allowAny: true

      # It's sometimes useful to explicitly name to guard against future changes
      "@typescript-eslint/no-inferrable-types": off
      "@typescript-eslint/no-empty-function": off
      "@typescript-eslint/no-implied-eval": off

      # These could theoretically be turned on (or merit investigation) but are currently noisy
      "@typescript-eslint/no-misused-promises": off
      "@typescript-eslint/no-floating-promises": off
      "@typescript-eslint/restrict-template-expressions": off
      "@typescript-eslint/no-unsafe-member-access": off
      "@typescript-eslint/no-unsafe-return": off
      "@typescript-eslint/no-unsafe-assignment": off
      "@typescript-eslint/no-unsafe-call": off
      "@typescript-eslint/require-await": off
      "@typescript-eslint/prefer-regexp-exec": off
      "@typescript-eslint/no-unnecessary-condition": off # similar to strict-boolean-expressions, but catches more (noisy) cases?
      "@typescript-eslint/unbound-method": [error, { ignoreStatic: true }]

  - rules:
      "@typescript-eslint/no-explicit-any": off
    files:
      - "**/*.stories.tsx"
      - "**/*.test.tsx"
      - "**/*.test.ts"

  - rules:
      "@typescript-eslint/no-explicit-any": warn
    files:
      - "packages/studio-base/src/context/PanelCatalogContext.ts"
      - "packages/studio-base/src/panels/NodePlayground/Editor.tsx"
      - "packages/studio-base/src/panels/ThreeDimensionalViz/SceneBuilder/index.ts"
      - "packages/studio-base/src/panels/ThreeDimensionalViz/SceneBuilder/types.ts"
      - "packages/studio-base/src/panels/ThreeDimensionalViz/WorldMarkers.tsx"
      - "packages/studio-base/src/panels/ThreeDimensionalViz/threeDimensionalVizUtils.ts"
      - "packages/studio-base/src/panels/ThreeDimensionalViz/utils/groupingUtils.ts"
      - "packages/studio-base/src/types/panels.ts"
